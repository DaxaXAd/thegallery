security:
    # Password Hashing Configuration
    # Uses Symfony's recommended automatic hashing algorithm
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # User Provider Configuration
    # Defines how users are loaded from the database
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User    # Uses the User entity
                property: email           # Identifies users by their email

    # Firewall Configuration
    firewalls:
        # Development tools firewall
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false               # Disables security for these routes

        # Main application firewall
        main:
            lazy: true                    # Loads user only when necessary
            provider: app_user_provider   # Uses the provider defined above
            
            # Login form configuration
            form_login:
                login_path: app_login     # Route to login form
                check_path: app_login     # Route for credentials checking
                enable_csrf: true         # Enables CSRF protection

            # Logout configuration
            logout:
                path: app_logout          # Route for logging out
                target: home              # Redirect after logout

    # Access Control Configuration
    # Rules are checked in order, first match is used
    access_control:
        # Admin-only routes
        - { path: ^/test-user, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/contact/show, roles: ROLE_ADMIN }
        - { path: ^/contact/index, roles: ROLE_ADMIN }
        - { path: ^/user/new, roles: ROLE_ADMIN }
        - { path: ^/test, roles: ROLE_ADMIN }
        
        # Authenticated user routes
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/image, roles: ROLE_USER }
        - { path: ^/post, roles: ROLE_USER }
        - { path: ^/user, roles: ROLE_USER }
        - { path: ^/comment, roles: ROLE_USER }

# Test Environment Configuration
when@test:
    security:
        password_hashers:
            # Reduces hashing complexity to speed up tests
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4                   # Minimum value for bcrypt
                time_cost: 3              # Minimum value for argon
                memory_cost: 10           # Minimum value for argon
